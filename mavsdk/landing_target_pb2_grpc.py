# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import landing_target_pb2 as landing__target_dot_landing__target__pb2


class LandingTargetServiceStub(object):
    """
    Allows developers to stream the position of a landing target for the drone to land on.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.PublishPositionRelative = channel.unary_unary(
                '/mavsdk.rpc.landing_target.LandingTargetService/PublishPositionRelative',
                request_serializer=landing__target_dot_landing__target__pb2.PublishPositionRelativeRequest.SerializeToString,
                response_deserializer=landing__target_dot_landing__target__pb2.PublishPositionRelativeResponse.FromString,
                )


class LandingTargetServiceServicer(object):
    """
    Allows developers to stream the position of a landing target for the drone to land on.
    """

    def PublishPositionRelative(self, request, context):
        """Publish landing target measurement recorded by a sensor onboard the drone
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_LandingTargetServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'PublishPositionRelative': grpc.unary_unary_rpc_method_handler(
                    servicer.PublishPositionRelative,
                    request_deserializer=landing__target_dot_landing__target__pb2.PublishPositionRelativeRequest.FromString,
                    response_serializer=landing__target_dot_landing__target__pb2.PublishPositionRelativeResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'mavsdk.rpc.landing_target.LandingTargetService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class LandingTargetService(object):
    """
    Allows developers to stream the position of a landing target for the drone to land on.
    """

    @staticmethod
    def PublishPositionRelative(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mavsdk.rpc.landing_target.LandingTargetService/PublishPositionRelative',
            landing__target_dot_landing__target__pb2.PublishPositionRelativeRequest.SerializeToString,
            landing__target_dot_landing__target__pb2.PublishPositionRelativeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
